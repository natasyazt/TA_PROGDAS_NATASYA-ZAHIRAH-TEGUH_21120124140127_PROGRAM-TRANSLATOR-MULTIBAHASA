import tkinter as tk
from tkinter import ttk, messagebox
from googletrans import Translator, LANGUAGES


class TranslatorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("🌈 Program Translator MultiBahasa🌟")
        self.root.geometry("850x650")
        self.root.config(bg="#ffe4e1")

        self.translator = Translator()
        self.translation_history = []  

        header = tk.Label(
            self.root,
            text="🌟 Translator MultiBahasa 🐾",
            font=("Comic Sans MS", 36, "bold"),
            bg="#ffe4e1",
            fg="#333",
        )
        header.pack(pady=20)

        lang_frame = tk.Frame(self.root, bg="#ffe4e1")
        lang_frame.pack(pady=10)

        source_label = tk.Label(
            lang_frame, text="🎯Translate to:", font=("Comic Sans MS", 14), bg="#ffe4e1", fg="#333"
        )
        source_label.grid(row=0, column=0, padx=10)
        self.target_lang = ttk.Combobox(
            lang_frame, values=list(LANGUAGES.values()), state="readonly", width=30
        )
        self.target_lang.set("indonesian")
        self.target_lang.grid(row=0, column=1, padx=10)

        frame = tk.Frame(self.root, bg="#ffe4e1")
        frame.pack(pady=20, padx=20)

        input_label = tk.Label(frame, text="✍️Input your text!", font=("Comic Sans MS", 16), bg="#ffe4e1", fg="#555")
        input_label.grid(row=0, column=0, padx=10, pady=5)
        self.input_textbox = tk.Text(
            frame, height=10, width=40, font=("Comic Sans MS", 12), wrap="word", bg="#fff5f5", fg="#333"
        )
        self.input_textbox.grid(row=1, column=0, padx=10, pady=5)

        output_label = tk.Label(frame, text="💡Translation", font=("Comic Sans MS", 16), bg="#ffe4e1", fg="#555")
        output_label.grid(row=0, column=1, padx=10, pady=5)
        self.output_textbox = tk.Text(
            frame, height=10, width=40, font=("Comic Sans MS", 12), wrap="word", bg="#f2f2f2", fg="#333"
        )
        self.output_textbox.grid(row=1, column=1, padx=10, pady=5)

        self.detected_language_label = tk.Label(
            self.root,
            text="🔍 Language Detect: None 😴",
            font=("Comic Sans MS", 14),
            bg="#ffe4e1",
            fg="#333",
        )
        self.detected_language_label.pack(pady=5)

        translate_button = tk.Button(
            self.root,
            text="🌈TRANSLATE🌈",
            font=("Comic Sans MS", 16),
            bg="#ff6f91",
            fg="#ffffff",
            command=self.translate_text,
        )
        translate_button.pack(pady=20)

        show_history_button = tk.Button(
            self.root,
            text="🗂️ Show All History",
            font=("Comic Sans MS", 14),
            bg="#ff9aa2",
            fg="#ffffff",
            command=self.print_history,
        )
        show_history_button.pack(pady=10)

        history_label = tk.Label(
            self.root, text="📜Translation History", font=("Comic Sans MS", 18), bg="#ffe4e1", fg="#333"
        )
        history_label.pack(pady=10)
        self.history_listbox = tk.Listbox(
            self.root, height=10, font=("Comic Sans MS", 12), bg="#fff5f5", fg="#333", selectbackground="#ff9aa2"
        )
        self.history_listbox.pack(pady=10, padx=10, fill="both", expand=True)
        self.history_listbox.bind("<<ListboxSelect>>", self.show_selected_history)

    def translate_text(self):
        input_text = self.input_textbox.get("1.0", tk.END).strip()
        target_language = self.target_lang.get().strip()

        if not input_text:
            messagebox.showerror("🛑 Error", "Teks input tidak boleh kosong! 💬")
            return

        target_language_code = None
        for key, value in LANGUAGES.items():
            if value.lower() == target_language.lower():
                target_language_code = key
                break

        if not target_language_code:
            messagebox.showerror("🛑 Error", "Bahasa target tidak valid! 🌎")
            return

        try:
            detected_lang = self.translator.detect(input_text).lang
            detected_lang_name = LANGUAGES.get(detected_lang, "Unknown")
            translated = self.translator.translate(input_text, dest=target_language_code)
            translated_text = translated.text

            self.detected_language_label.config(
                text=f"🔍 Deteksi Bahasa: {detected_lang_name.capitalize()} 🗣️"
            )
            self.output_textbox.delete("1.0", tk.END)
            self.output_textbox.insert(tk.END, translated_text)

            self.add_to_history(
                f"'{input_text}' ({detected_lang_name.capitalize()})", translated_text, target_language
            )
        except Exception as e:
            messagebox.showerror("🛑 Error", f"Gagal menerjemahkan: {e} 😢")

    def add_to_history(self, original_text, translated_text, target_language):
        entry = f"'{original_text}' → [{target_language.capitalize()}]: '{translated_text}'"
        self.translation_history.append(entry)  
        self.history_listbox.insert(tk.END, entry)

    def show_selected_history(self, event):
        selected_index = self.history_listbox.curselection()
        if selected_index:
            selected_text = self.history_listbox.get(selected_index)
            messagebox.showinfo("📜 Detail Riwayat", selected_text)

    def print_history(self):
        """Cetak seluruh riwayat menggunakan perulangan."""
        if not self.translation_history:
            messagebox.showinfo("📜 Riwayat Kosong", "Belum ada riwayat penerjemahan!")
            return

        history_details = "\n".join(self.translation_history)
        messagebox.showinfo("📜 Semua Riwayat", history_details)


if __name__ == "__main__":
    root = tk.Tk()
    app = TranslatorApp(root)
    root.mainloop()
